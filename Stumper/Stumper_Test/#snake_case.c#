/*
     ** EPITECH PROJECT, 2021
     ** snake
     ** File description:
     ** case
     */

#include <string.h>
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

 int my_strlen(char *str)
 {
     int i = 0;

     while (str[i] != '\0'){
         i++;
     }
     return i;
 }

 void my_putchar(char c)
 {
     write(1, &c, 1);
 }

 int my_putstr(char *str)
 {
     for (int i = 0; str[i] != '\0'; i++)
         my_putchar(str[i]);
     return 0;
 }

 char min_to_maj(char *str, int i)
 {
     if (str[i] >= 'a' && str[i] <= 'z')
         str[i] = str[i] - 32;
 }

 char maj_to_min(char *str, int i)
 {
     if (str[i] >= 'A' && str[i] <= 'Z')
         str[i] = str[i] + 32;
 }

 int get_validity(char str)
 {
     if (str >= '0' && str <= '9' || str >= 'a' && \
         str <= 'z' || str >= 'A' && str <= 'Z')
         return (0);
     else
         return (1);
 }

 void get_space(char *str)
 {
     int i = 0, j = 0, p = 0;
     int lenght = my_strlen(str);
     char temp[lenght + 1];

     while (str[i] == ' ') i++;
     for (; str[i] != '\0'; i++, j++)
         temp[j] = str[i];
     temp[j] = '\0';
     p = my_strlen(temp) - 1;
     for (; temp[p] == ' '; p--) ;
     temp[p + 1] = '\0';
     if (get_validity(temp[p]) == 1)
         temp[p] = '_';
     for (int k = 0; temp[k] != '\0'; k++){
         if (temp[k] >= '0' && temp[k] <= '9' && temp[k - 1] >= 'a' && \
             temp[k - 1] <= 'z')
             write(1, "_", 1);
         if (temp[k] >= '0' && temp[k] <= '9' && temp[k + 1] >= 'a' && \
             temp[k + 1] <= 'z')
             write(1, "_", 1);
         if (temp[k] == ' ' || temp[k] == '\'' || temp[k] == '-')
             temp[k] = '_';
         else
             maj_to_min(temp, k);
     }
     my_putstr(temp);
 }

 int main(int ac, char **av)
 {
     char *str = av[1];
     get_space(str);
     return 0;
 }
